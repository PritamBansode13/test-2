version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  build:
    commands:
      - echo Building the Docker image...
      - docker build -t $AWS_REPOSITORY .
      - docker tag $AWS_REPOSITORY:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_REPOSITORY:latest

  post_build:
    commands:
      - echo Pushing the Docker image to Amazon ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_REPOSITORY:latest

      - echo Creating/Updating Lambda function...
      # First, try creating the Lambda function
      - aws lambda create-function --function-name randmalay --package-type Image --code ImageUri=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_REPOSITORY:latest --role arn:aws:iam::$AWS_ACCOUNT_ID:role/LambdaExecutionRole --architectures x86_64 --timeout 15 --memory-size 128 || aws lambda update-function-code --function-name randmalay --image-uri $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_REPOSITORY:latest
        || \
        aws lambda update-function-code --function-name randmalay  --image-uri $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$AWS_REPOSITORY:latest

      - echo Creating API Gateway...
      - aws apigateway create-rest-api --name randmalay-api --description "API Gateway for randmalay Lambda function" --region $AWS_REGION --output json > api_gateway_output.json

      - API_ID=$(jq -r '.id' api_gateway_output.json)
      - ROOT_ID=$(aws apigateway get-resources --rest-api-id $API_ID --region $AWS_REGION --output json | jq -r '.items[] | select(.path == "/") | .id')

      - echo Creating API resource...
      - aws apigateway create-resource --rest-api-id $API_ID  --parent-id $ROOT_ID --path-part hello --region $AWS_REGION

      - RESOURCE_ID=$(aws apigateway get-resources --rest-api-id $API_ID --region $AWS_REGION --output json | jq -r '.items[] | select(.path == "/hello") | .id')

      - echo Creating GET method...
      - aws apigateway put-method --rest-api-id $API_ID --resource-id $RESOURCE_ID --http-method GET --authorization-type NONE --region $AWS_REGION

      - echo Creating integration...
      - aws apigateway put-integration --rest-api-id $API_ID --resource-id $RESOURCE_ID --http-method GET --type AWS_PROXY --integration-http-method POST  --uri arn:aws:apigateway:$AWS_REGION:lambda:path/2015-03-31/functions/$(aws lambda get-function --function-name randmalay --query 'Configuration.FunctionArn' --output text)/invocations --region $AWS_REGION

      - echo Creating deployment...
      - aws apigateway create-deployment --rest-api-id $API_ID --stage-name prod  --region $AWS_REGION

      - echo Granting API Gateway permission to invoke Lambda...
      - aws lambda add-permission --function-name randmalay --principal apigateway.amazonaws.com --statement-id apigateway-prod --action lambda:InvokeFunction --source-arn arn:aws:apigateway:$AWS_REGION::/restapis/$API_ID/*/GET/hello --region $AWS_REGION
